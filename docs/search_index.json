[
["graphics.html", "Chapter 7 Graphics", " Chapter 7 Graphics Exercise 7.5.1 Make a plot with click handle that shows all the data returned in the input. Solution We can use the allRows argument in nearPoints to see the entire data and add a boolean column that will be true TRUE for the given point (i.e., row) that was clicked. library(shiny) library(ggplot2) ui &lt;- fluidPage( plotOutput(&quot;plot&quot;, click = &quot;plot_click&quot;), tableOutput(&quot;data&quot;) ) server &lt;- function(input, output, session) { output$plot &lt;- renderPlot({ ggplot(mtcars, aes(wt, mpg)) + geom_point() }, res = 96) output$data &lt;- renderTable({ nearPoints(mtcars, input$plot_click, allRows = TRUE) }) } shinyApp(ui, server) Exercise 7.5.2 Make a plot with click, dblclick, hover, and brush output handlers and nicely display the current selection in the sidebar. Plot the plot in the main panel. Solution We can use the nearPoints function to extract the data from plot_click, plot_dbl, and plot_hover. We need to use the function brushedPoints to extract the points within the plot_brush area. To ‘nicely’ display the current selection, we will use dataTableOutput. library(shiny) library(ggplot2) # Set options for rendering DataTables. options &lt;- list( autoWidth = FALSE, searching = FALSE, ordering = FALSE, lengthChange = FALSE, lengthMenu = FALSE, pageLength = 5, # Only show 5 rows per page. paging = TRUE, # Enable pagination. Must be set for pageLength to work. info = FALSE ) ui &lt;- fluidPage( sidebarLayout( sidebarPanel( width = 6, h4(&quot;Selected Points&quot;), dataTableOutput(&quot;click&quot;), br(), h4(&quot;Double Clicked Points&quot;), dataTableOutput(&quot;dbl&quot;), br(), h4(&quot;Hovered Points&quot;), dataTableOutput(&quot;hover&quot;), br(), h4(&quot;Brushed Points&quot;), dataTableOutput(&quot;brush&quot;) ), mainPanel(width = 6, plotOutput(&quot;plot&quot;, click = &quot;plot_click&quot;, dblclick = &quot;plot_dbl&quot;, hover = &quot;plot_hover&quot;, brush = &quot;plot_brush&quot;) ) ) ) server &lt;- function(input, output, session) { output$plot &lt;- renderPlot({ ggplot(iris, aes(Sepal.Length, Sepal.Width)) + geom_point() }, res = 96) output$click &lt;- renderDataTable( nearPoints(iris, input$plot_click), options = options) output$hover &lt;- renderDataTable( nearPoints(iris, input$plot_hover), options = options) output$dbl &lt;- renderDataTable( nearPoints(iris, input$plot_dbl), options = options) output$brush &lt;- renderDataTable( brushedPoints(iris, input$plot_brush), options = options) } shinyApp(ui, server) Exercise 7.5.3 Compute the limits of the distance scale using the size of the plot. Solution output_size &lt;- function(id) { reactive(c( session$clientData[[paste0(&quot;output_&quot;, id, &quot;_width&quot;)]], session$clientData[[paste0(&quot;output_&quot;, id, &quot;_height&quot;)]] )) } "]
]
